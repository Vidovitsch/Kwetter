package DaoInterfaces;

import Domain.Kweet;
import Domain.User;

import java.util.List;

public interface IKweetDao {

    /**
     * Find all persisted kweets
     * @return a list of kweets
     */
    List<Kweet> findAll();

    /**
     * Find one persisted kweet by a unique id
     * @param id of the kweet
     * @return a kweet
     */
    Kweet findById(Long id);

    /**
     * Find one persisted kweet by his sender
     * @param sender of the kweet
     * @return a kweet
     */
    List<Kweet> findBySender(User sender);

    /**
     * Persists a new kweet
     * A unique id will be generated by the persistency framework
     * @param kweet to be persisted
     * @return a persisted kweet
     */
    Kweet create(Kweet kweet);

    /**
     * Persists a list of new kweets
     * A unique id will be generated by the persistency framework
     * @param kweets to be persisted
     * @return a list of persisted kweets
     */
    List<Kweet> create(List<Kweet> kweets);

    /**
     * Updates an persisted kweet
     * If the kweet already exists, the kweet gets persisted
     * @param kweet to be updated
     * @return an updated kweet
     */
    Kweet update(Kweet kweet);

    /**
     * Removes one persisted kweet
     * If the kweet doesn't exist, a false will return
     * @param kweet to be removed
     * @return true (if successful) or false
     */
    boolean remove(Kweet kweet);
}
