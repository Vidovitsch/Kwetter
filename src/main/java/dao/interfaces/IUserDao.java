package dao.interfaces;

import domain.User;

import javax.persistence.EntityManager;
import java.util.List;

public interface IUserDao {

    EntityManager getEntityManager();

    /**
     * Find all persisted users
     * @return a list of users
     */
    List<User> findAll();

    /**
     * Find one persisted user by a unique id
     * @param id of the user
     * @return a user
     */
    User findById(Long id);

    /**
     * Find one persisted user by a unique name
     * @param username of the user
     * @return a user
     */
    User findByUsername(String username);

    /**
     * Persists a new user
     * A unique id will be generated by the persistency framework
     * @param user to be persisted
     * @return a persisted user
     */
    User create(User user);

    /**
     * Persists a list of new users
     * A unique id will be generated by the persistency framework
     * @param users to be persisted
     * @return a list of persisted users
     */
    List<User> create(List<User> users);

    /**
     * Updates an persisted user
     * If the role already exists, the role gets persisted
     * @param user to be updated
     * @return an updated user
     */
    User update(User user);

    /**
     * Removes one persisted role
     * If the user doesn't exist, a false will return
     * @param user to be removed
     * @return true (if successful) or false
     */
    boolean remove(User user);
}
